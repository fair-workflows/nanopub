[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "nanopub"
version= "1.0.0"
description = "Python client for Nanopublications"
readme = "README.md"
requires-python = ">=3.12.4"
license = { file = "LICENSE" }
authors = [
    { name = "Robin Richardson", email = "r.richardson@esciencecenter.nl" },
    { name = "Djura Smits" },
    { name = "Sven van den Burg" },
    { name = "Vincent Emonet", email = "vincent.emonet@gmail.com" },
]
keywords = [
    "Nanopublication",
    "RDF",
    "Linked Data",
    "Publishing"
]
classifiers = [
    "License :: OSI Approved :: Apache Software License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.12",
]
dynamic = ["version"]

dependencies = [
    "rdflib >=6.0.2",
    "requests",
    "typer",
    "yatiml",
    "pycryptodome >=3.15.0",
]

[project.optional-dependencies]
test = [
    "pytest >=7.1.3",
    "pytest-cov >=3.0.0",
    "coveralls",
    "mypy >=0.991",
    "isort >=5.11.0",
    "flake8 >=5.0.0",
    "Flake8-pyproject >=1.2.2",
    "flaky",
]
doc = [
    "mkdocs >=1.4.2",
    "mkdocs-material >=8.2.7",
    "mkdocstrings[python] >=0.19.1",
    "mdx-include >=1.4.1",
    "mkdocs-markdownextradata-plugin >=0.2.5",
]
dev = [
    "pre-commit >=2.17.0,<3.0.0",
    "autoflake >=1.4.0,<2.0.0",
    "jupyter",
    "notebook",
    "types-requests",
]


[project.scripts]
np = "nanopub.__main__:cli"


[project.urls]
Homepage = "https://fair-workflows.github.io/nanopub"
Documentation = "https://fair-workflows.github.io/nanopub"
History = "https://github.com/fair-workflows/nanopub/releases"
Tracker = "https://github.com/fair-workflows/nanopub/issues"
Source = "https://github.com/fair-workflows/nanopub"



# ENVIRONMENTS AND SCRIPTS
[tool.hatch.envs.default]
features = [
    "test",
    "doc",
    "dev",
]
post-install-commands = [
    "pre-commit install",
]

[tool.hatch.envs.default.scripts]
dev = "./scripts/dev.sh"
test = "./scripts/test.sh {args}"
docs = "./scripts/docs.sh {args}"
format = "./scripts/format.sh"
lint = "./scripts/lint.sh"


# TOOLS
[tool.hatch.version]
path = "nanopub/_version.py"


[tool.isort]
line_length = 120
skip = ["nanopub/__init__.py"]
profile = "black"


[tool.coverage.run]
source = ["nanopub"]
branch = true

[tool.coverage.report]
omit = ["nanopub/trustyuri/*", "tests/*"]


[tool.flake8]
max-complexity = 17
max-line-length = 120
per-file-ignores = [
    "__init__.py:F401",
]
ignore = [
    "E501", # line too long
    "E303", # too many blank lines
    "E301", # expected 1 blank lines found 0
    "W503", # line break before binary operator
]


[tool.mypy]
strict = false
implicit_reexport = true
follow_imports = "normal"
ignore_missing_imports = true
pretty = true
show_column_numbers = true
warn_no_return = true
warn_unused_ignores = false
warn_redundant_casts = true
disallow_untyped_defs = false
no_implicit_optional = false


[tool.pytest.ini_options]
markers = [
    "no_rsa_key: mark a test as a test only run when there is no nanopub RSA key setup.",
]
